/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package controller.front;

import java.io.UnsupportedEncodingException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import model.KeeperDAO;
import model.Keeper;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

/** 
 * MyEclipse Struts
 * Creation date: 03-04-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class UpdateCipher extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		try {
			request.setCharacterEncoding("gb2312");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		String sn = request.getParameter("sn").trim();
		String old_password = request.getParameter("old_password").trim();
		String name = request.getParameter("name").trim();
		String password = request.getParameter("password").trim();
		String authority = request.getParameter("authority").trim();
		int dep_sn = Integer.parseInt(request.getParameter("dep_sn").trim());
		
		KeeperDAO keeper_dao = new KeeperDAO();
		if(keeper_dao.query_keeper(sn, old_password) != null){
			keeper_dao = new KeeperDAO();
			keeper_dao.update_info(new Keeper(sn, name, password, authority, dep_sn));
			request.setAttribute("prompt", "用户信息更新成功！");
			Keeper keeper = null, admin = null;
			if(request.getSession().getAttribute("keeper")!=null){
				keeper = (Keeper)(request.getSession().getAttribute("keeper"));
				keeper.setName(name);
				keeper.setAuthority(authority);
				keeper.setDep_sn(dep_sn);
				return mapping.findForward("keeper");
			}else {				
				admin = (Keeper)(request.getSession().getAttribute("admin"));
				admin.setName(name);
				admin.setAuthority(authority);
				admin.setDep_sn(dep_sn);
				return mapping.findForward("admin");
			}
			
		}else{
			request.setAttribute("prompt", "旧密码不正确！");
			if(request.getSession().getAttribute("keeper")!=null){
				return mapping.findForward("keeper");
			}else {				
				return mapping.findForward("admin");
			}
		}
		
	}
}