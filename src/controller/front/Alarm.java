/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package controller.front;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import model.Device;
import model.DeviceDAO;
import model.Keeper;
import model.Model;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

/** 
 * MyEclipse Struts
 * Creation date: 03-13-2014
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class Alarm extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		try {            
            HttpSession session = request.getSession();
            ArrayList<Device> dev_list = (ArrayList<Device>)session.getAttribute("dev_list");
            ArrayList<Model> model_list = (ArrayList<Model>)session.getAttribute("model_list");
            
            double remainder; 
            if(request.getParameter("remainder").trim().equals(""))
            	remainder = 1000;
            else
            	remainder = Double.parseDouble(request.getParameter("remainder").trim());
            
            for(int i=0; i<model_list.size(); i++){
            	for(int k=0; k<dev_list.size(); k++){
            		if(model_list.get(i).getSn() == dev_list.get(k).getModel_sn()){
            			if((model_list.get(i).getLife() - dev_list.get(k).getElapsed_year()) > remainder){           				
            				dev_list.remove(k);
            				k--;
            			}           			
            						
            		}
            			
            	}
            	if(dev_list.size() == 0)
    				break;
            }
            
            return mapping.findForward("success");
            

        } catch (RuntimeException re) {
            re.printStackTrace(System.err);
            return mapping.findForward("error");
        }
	}
}