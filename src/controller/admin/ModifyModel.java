/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package controller.admin;

import java.io.UnsupportedEncodingException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import model.ModelDAO;


/**
 * MyEclipse Struts Creation date: 11-02-2013
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class ModifyModel extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		try {
			request.setCharacterEncoding("gb2312");
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		HttpSession session = request.getSession();

		try {
			int sn = Integer.parseInt(request.getParameter("sn"));
			String name = request.getParameter("name").trim();
			int item_sn = Integer.parseInt(request.getParameter("item_sn").trim());
			if(item_sn == 0)
				return mapping.findForward("error");
			int life = Integer.parseInt(request.getParameter("life").trim());			
			String hasAppendix = request.getParameter("hasAppendix");
			if(hasAppendix == null)
				hasAppendix = "N";
			else
				hasAppendix ="Y";
			
			int supplier_sn = Integer.parseInt(request.getParameter("supplier_sn"));
			if(supplier_sn == 0)
				return mapping.findForward("error");
			
			ModelDAO modelDao = new ModelDAO();
			request.setAttribute("numUpdate", modelDao.updateModel(sn, name, item_sn, life, hasAppendix, supplier_sn));

			session.setAttribute("model_list", new ModelDAO().getModel());
			return mapping.findForward("success");

		} catch (RuntimeException re) {
			re.printStackTrace(System.err);
			return mapping.findForward("error");
		}
	}

	
}